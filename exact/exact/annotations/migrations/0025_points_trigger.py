# Generated by Django 2.0.6 on 2018-06-22 14:33

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('annotations', '0002_auto_20180510_2310'),
    ]

    operations = [
        migrations.RunSQL('''
        CREATE OR REPLACE FUNCTION update_points() RETURNS TRIGGER AS $$
        DECLARE
          user_id INT;
        BEGIN
          IF (TG_OP = 'DELETE') THEN
            SELECT a.user_id FROM annotations_annotation a WHERE a.id = OLD.annotation_id INTO user_id;

            IF (OLD.verified) THEN
                UPDATE users_user u SET points = u.points - 1 WHERE u.id = user_id;
            END IF;
            RETURN OLD;
          ELSIF (TG_OP = 'INSERT') THEN
            SELECT a.user_id FROM annotations_annotation a WHERE a.id = NEW.annotation_id INTO user_id;

            IF (NEW.verified) THEN
              UPDATE users_user u SET points = u.points + 1 WHERE u.id = user_id;
            END IF;
            RETURN NEW;
          ELSIF (TG_OP = 'UPDATE') THEN
            SELECT a.user_id FROM annotations_annotation a WHERE a.id = OLD.annotation_id INTO user_id;

            IF (OLD.verified AND OLD.annotation_id != NEW.annotation_id) THEN
              UPDATE users_user u SET points = u.points - 1 WHERE u.id = user_id;

              SELECT a.user_id FROM annotations_annotation a WHERE a.id = NEW.annotation_id INTO user_id;
            END IF;

            SELECT a.user_id FROM annotations_annotation a WHERE a.id = NEW.annotation_id INTO user_id;

            IF (NEW.verified AND (NOT OLD.verified OR (OLD.annotation_id != NEW.annotation_id))) THEN
              UPDATE users_user u SET points = u.points + 1 WHERE u.id = user_id;
            END IF;

            IF (NOT NEW.verified AND OLD.verified AND OLD.annotation_id = NEW.annotation_id) THEN
              UPDATE users_user u SET points = u.points - 1 WHERE u.id = user_id;
            END IF;

            RETURN NEW;
          END IF;
        END
        $$ LANGUAGE plpgsql;
        '''),
        migrations.RunSQL('''
        CREATE TRIGGER points_update
        AFTER DELETE OR INSERT OR UPDATE OF "verified", "annotation_id" ON annotations_verification
        FOR EACH ROW
        EXECUTE PROCEDURE update_points();
        ''')
    ]
