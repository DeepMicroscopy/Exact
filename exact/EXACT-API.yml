openapi: 3.0.2
info:
  title: EXACT - API
  version: 1.0.0
  description: API to interact with the EXACT Server
paths:
  /api/v1/users/users/:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: username__contains
        required: false
        in: query
        description: username__contains
        schema:
          type: string
      - name: is_superuser
        required: false
        in: query
        description: is_superuser
        schema:
          type: string
      - name: is_staff
        required: false
        in: query
        description: is_staff
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: last_login
        required: false
        in: query
        description: last_login
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
  /api/v1/users/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: username__contains
        required: false
        in: query
        description: username__contains
        schema:
          type: string
      - name: is_superuser
        required: false
        in: query
        description: is_superuser
        schema:
          type: string
      - name: is_staff
        required: false
        in: query
        description: is_staff
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: last_login
        required: false
        in: query
        description: last_login
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: username__contains
        required: false
        in: query
        description: username__contains
        schema:
          type: string
      - name: is_superuser
        required: false
        in: query
        description: is_superuser
        schema:
          type: string
      - name: is_staff
        required: false
        in: query
        description: is_staff
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: last_login
        required: false
        in: query
        description: last_login
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: username__contains
        required: false
        in: query
        description: username__contains
        schema:
          type: string
      - name: is_superuser
        required: false
        in: query
        description: is_superuser
        schema:
          type: string
      - name: is_staff
        required: false
        in: query
        description: is_staff
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: last_login
        required: false
        in: query
        description: last_login
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - users
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: username
        required: false
        in: query
        description: username
        schema:
          type: string
      - name: username__contains
        required: false
        in: query
        description: username__contains
        schema:
          type: string
      - name: is_superuser
        required: false
        in: query
        description: is_superuser
        schema:
          type: string
      - name: is_staff
        required: false
        in: query
        description: is_staff
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: last_login
        required: false
        in: query
        description: last_login
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - users
  /api/v1/users/teams/:
    get:
      operationId: listTeams
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: members
        required: false
        in: query
        description: members
        schema:
          type: string
      - name: image_sets
        required: false
        in: query
        description: image_sets
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - users
    post:
      operationId: createTeam
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - users
  /api/v1/users/teams/{id}/:
    get:
      operationId: retrieveTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: members
        required: false
        in: query
        description: members
        schema:
          type: string
      - name: image_sets
        required: false
        in: query
        description: image_sets
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - users
    put:
      operationId: updateTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: members
        required: false
        in: query
        description: members
        schema:
          type: string
      - name: image_sets
        required: false
        in: query
        description: image_sets
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - users
    patch:
      operationId: partialUpdateTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: members
        required: false
        in: query
        description: members
        schema:
          type: string
      - name: image_sets
        required: false
        in: query
        description: image_sets
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - users
    delete:
      operationId: destroyTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: members
        required: false
        in: query
        description: members
        schema:
          type: string
      - name: image_sets
        required: false
        in: query
        description: image_sets
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - users
  /api/v1/users/team_membership/:
    get:
      operationId: listTeamMemberships
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: is_admin
        required: false
        in: query
        description: is_admin
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TeamMembership'
          description: ''
      tags:
      - users
    post:
      operationId: createTeamMembership
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamMembership'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMembership'
          description: ''
      tags:
      - users
  /api/v1/users/team_membership/{id}/:
    get:
      operationId: retrieveTeamMembership
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: is_admin
        required: false
        in: query
        description: is_admin
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMembership'
          description: ''
      tags:
      - users
    put:
      operationId: updateTeamMembership
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: is_admin
        required: false
        in: query
        description: is_admin
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamMembership'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMembership'
          description: ''
      tags:
      - users
    patch:
      operationId: partialUpdateTeamMembership
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: is_admin
        required: false
        in: query
        description: is_admin
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamMembership'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMembership'
          description: ''
      tags:
      - users
    delete:
      operationId: destroyTeamMembership
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: is_admin
        required: false
        in: query
        description: is_admin
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - users
  /api/v1/images/images/:
    get:
      operationId: listImages
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: filename
        required: false
        in: query
        description: filename
        schema:
          type: string
      - name: filename__contains
        required: false
        in: query
        description: filename__contains
        schema:
          type: string
      - name: filename__in
        required: false
        in: query
        description: filename__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__contains
        required: false
        in: query
        description: time__contains
        schema:
          type: string
      - name: mpp
        required: false
        in: query
        description: mpp
        schema:
          type: string
      - name: mpp__range
        required: false
        in: query
        description: mpp__range
        schema:
          type: string
      - name: objectivePower
        required: false
        in: query
        description: objectivePower
        schema:
          type: string
      - name: objectivePower__range
        required: false
        in: query
        description: objectivePower__range
        schema:
          type: string
      - name: width
        required: false
        in: query
        description: width
        schema:
          type: string
      - name: width__range
        required: false
        in: query
        description: width__range
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: height__range
        required: false
        in: query
        description: height__range
        schema:
          type: string
      - name: image_set
        required: false
        in: query
        description: image_set
        schema:
          type: string
      - name: image_type
        required: false
        in: query
        description: image_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: num_annotations
        required: false
        in: query
        description: num_annotations
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
    post:
      operationId: createImage
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
  /api/v1/images/images/{id}/:
    get:
      operationId: retrieveImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: filename
        required: false
        in: query
        description: filename
        schema:
          type: string
      - name: filename__contains
        required: false
        in: query
        description: filename__contains
        schema:
          type: string
      - name: filename__in
        required: false
        in: query
        description: filename__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__contains
        required: false
        in: query
        description: time__contains
        schema:
          type: string
      - name: mpp
        required: false
        in: query
        description: mpp
        schema:
          type: string
      - name: mpp__range
        required: false
        in: query
        description: mpp__range
        schema:
          type: string
      - name: objectivePower
        required: false
        in: query
        description: objectivePower
        schema:
          type: string
      - name: objectivePower__range
        required: false
        in: query
        description: objectivePower__range
        schema:
          type: string
      - name: width
        required: false
        in: query
        description: width
        schema:
          type: string
      - name: width__range
        required: false
        in: query
        description: width__range
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: height__range
        required: false
        in: query
        description: height__range
        schema:
          type: string
      - name: image_set
        required: false
        in: query
        description: image_set
        schema:
          type: string
      - name: image_type
        required: false
        in: query
        description: image_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: num_annotations
        required: false
        in: query
        description: num_annotations
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
    put:
      operationId: updateImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: filename
        required: false
        in: query
        description: filename
        schema:
          type: string
      - name: filename__contains
        required: false
        in: query
        description: filename__contains
        schema:
          type: string
      - name: filename__in
        required: false
        in: query
        description: filename__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__contains
        required: false
        in: query
        description: time__contains
        schema:
          type: string
      - name: mpp
        required: false
        in: query
        description: mpp
        schema:
          type: string
      - name: mpp__range
        required: false
        in: query
        description: mpp__range
        schema:
          type: string
      - name: objectivePower
        required: false
        in: query
        description: objectivePower
        schema:
          type: string
      - name: objectivePower__range
        required: false
        in: query
        description: objectivePower__range
        schema:
          type: string
      - name: width
        required: false
        in: query
        description: width
        schema:
          type: string
      - name: width__range
        required: false
        in: query
        description: width__range
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: height__range
        required: false
        in: query
        description: height__range
        schema:
          type: string
      - name: image_set
        required: false
        in: query
        description: image_set
        schema:
          type: string
      - name: image_type
        required: false
        in: query
        description: image_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: num_annotations
        required: false
        in: query
        description: num_annotations
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
    patch:
      operationId: partialUpdateImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: filename
        required: false
        in: query
        description: filename
        schema:
          type: string
      - name: filename__contains
        required: false
        in: query
        description: filename__contains
        schema:
          type: string
      - name: filename__in
        required: false
        in: query
        description: filename__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__contains
        required: false
        in: query
        description: time__contains
        schema:
          type: string
      - name: mpp
        required: false
        in: query
        description: mpp
        schema:
          type: string
      - name: mpp__range
        required: false
        in: query
        description: mpp__range
        schema:
          type: string
      - name: objectivePower
        required: false
        in: query
        description: objectivePower
        schema:
          type: string
      - name: objectivePower__range
        required: false
        in: query
        description: objectivePower__range
        schema:
          type: string
      - name: width
        required: false
        in: query
        description: width
        schema:
          type: string
      - name: width__range
        required: false
        in: query
        description: width__range
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: height__range
        required: false
        in: query
        description: height__range
        schema:
          type: string
      - name: image_set
        required: false
        in: query
        description: image_set
        schema:
          type: string
      - name: image_type
        required: false
        in: query
        description: image_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: num_annotations
        required: false
        in: query
        description: num_annotations
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
    delete:
      operationId: destroyImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: filename
        required: false
        in: query
        description: filename
        schema:
          type: string
      - name: filename__contains
        required: false
        in: query
        description: filename__contains
        schema:
          type: string
      - name: filename__in
        required: false
        in: query
        description: filename__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__contains
        required: false
        in: query
        description: time__contains
        schema:
          type: string
      - name: mpp
        required: false
        in: query
        description: mpp
        schema:
          type: string
      - name: mpp__range
        required: false
        in: query
        description: mpp__range
        schema:
          type: string
      - name: objectivePower
        required: false
        in: query
        description: objectivePower
        schema:
          type: string
      - name: objectivePower__range
        required: false
        in: query
        description: objectivePower__range
        schema:
          type: string
      - name: width
        required: false
        in: query
        description: width
        schema:
          type: string
      - name: width__range
        required: false
        in: query
        description: width__range
        schema:
          type: string
      - name: height
        required: false
        in: query
        description: height
        schema:
          type: string
      - name: height__range
        required: false
        in: query
        description: height__range
        schema:
          type: string
      - name: image_set
        required: false
        in: query
        description: image_set
        schema:
          type: string
      - name: image_type
        required: false
        in: query
        description: image_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: num_annotations
        required: false
        in: query
        description: num_annotations
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - images
  /api/v1/images/images/{id}/get_patch/:
    get:
      operationId: getPatchImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
  /api/v1/images/images/{id}/slide_information/:
    get:
      operationId: slideInformationImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
  /api/v1/images/images/{id}/thumbnail/:
    get:
      operationId: thumbnailImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
  /api/v1/images/images/{id}/{z_dimension}/{frame}/tile/:
    get:
      operationId: viewImageImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: z_dimension
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: frame
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
  /api/v1/images/images/{id}/{z_dimension}/{frame}/tile_files/{level}/{tile_path}/:
    get:
      operationId: viewImageTileImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: z_dimension
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: frame
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: level
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: tile_path
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
  /api/v1/images/image_sets/:
    get:
      operationId: listImageSets
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: path
        required: false
        in: query
        description: path
        schema:
          type: string
      - name: path__contains
        required: false
        in: query
        description: path__contains
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: location__contains
        required: false
        in: query
        description: location__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: public
        required: false
        in: query
        description: public
        schema:
          type: string
      - name: main_annotation_type
        required: false
        in: query
        description: main_annotation_type
        schema:
          type: string
      - name: set_tags
        required: false
        in: query
        description: set_tags
        schema:
          type: string
      - name: set_versions
        required: false
        in: query
        description: set_versions
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      - name: collaboration_type
        required: false
        in: query
        description: collaboration_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: priority
        required: false
        in: query
        description: priority
        schema:
          type: string
          enum:
          - 1
          - 0
          - -1
      - name: zip_state
        required: false
        in: query
        description: zip_state
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: images
        required: false
        in: query
        description: images
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ImageSet'
          description: ''
      tags:
      - images
    post:
      operationId: createImageSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageSet'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageSet'
          description: ''
      tags:
      - images
  /api/v1/images/image_sets/{id}/:
    get:
      operationId: retrieveImageSet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: path
        required: false
        in: query
        description: path
        schema:
          type: string
      - name: path__contains
        required: false
        in: query
        description: path__contains
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: location__contains
        required: false
        in: query
        description: location__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: public
        required: false
        in: query
        description: public
        schema:
          type: string
      - name: main_annotation_type
        required: false
        in: query
        description: main_annotation_type
        schema:
          type: string
      - name: set_tags
        required: false
        in: query
        description: set_tags
        schema:
          type: string
      - name: set_versions
        required: false
        in: query
        description: set_versions
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      - name: collaboration_type
        required: false
        in: query
        description: collaboration_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: priority
        required: false
        in: query
        description: priority
        schema:
          type: string
          enum:
          - 1
          - 0
          - -1
      - name: zip_state
        required: false
        in: query
        description: zip_state
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: images
        required: false
        in: query
        description: images
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageSet'
          description: ''
      tags:
      - images
    put:
      operationId: updateImageSet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: path
        required: false
        in: query
        description: path
        schema:
          type: string
      - name: path__contains
        required: false
        in: query
        description: path__contains
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: location__contains
        required: false
        in: query
        description: location__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: public
        required: false
        in: query
        description: public
        schema:
          type: string
      - name: main_annotation_type
        required: false
        in: query
        description: main_annotation_type
        schema:
          type: string
      - name: set_tags
        required: false
        in: query
        description: set_tags
        schema:
          type: string
      - name: set_versions
        required: false
        in: query
        description: set_versions
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      - name: collaboration_type
        required: false
        in: query
        description: collaboration_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: priority
        required: false
        in: query
        description: priority
        schema:
          type: string
          enum:
          - 1
          - 0
          - -1
      - name: zip_state
        required: false
        in: query
        description: zip_state
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: images
        required: false
        in: query
        description: images
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageSet'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageSet'
          description: ''
      tags:
      - images
    patch:
      operationId: partialUpdateImageSet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: path
        required: false
        in: query
        description: path
        schema:
          type: string
      - name: path__contains
        required: false
        in: query
        description: path__contains
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: location__contains
        required: false
        in: query
        description: location__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: public
        required: false
        in: query
        description: public
        schema:
          type: string
      - name: main_annotation_type
        required: false
        in: query
        description: main_annotation_type
        schema:
          type: string
      - name: set_tags
        required: false
        in: query
        description: set_tags
        schema:
          type: string
      - name: set_versions
        required: false
        in: query
        description: set_versions
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      - name: collaboration_type
        required: false
        in: query
        description: collaboration_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: priority
        required: false
        in: query
        description: priority
        schema:
          type: string
          enum:
          - 1
          - 0
          - -1
      - name: zip_state
        required: false
        in: query
        description: zip_state
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: images
        required: false
        in: query
        description: images
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageSet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageSet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageSet'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageSet'
          description: ''
      tags:
      - images
    delete:
      operationId: destroyImageSet
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: path
        required: false
        in: query
        description: path
        schema:
          type: string
      - name: path__contains
        required: false
        in: query
        description: path__contains
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: name__in
        required: false
        in: query
        description: name__in
        schema:
          type: string
      - name: location
        required: false
        in: query
        description: location
        schema:
          type: string
      - name: location__contains
        required: false
        in: query
        description: location__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: public
        required: false
        in: query
        description: public
        schema:
          type: string
      - name: main_annotation_type
        required: false
        in: query
        description: main_annotation_type
        schema:
          type: string
      - name: set_tags
        required: false
        in: query
        description: set_tags
        schema:
          type: string
      - name: set_versions
        required: false
        in: query
        description: set_versions
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      - name: collaboration_type
        required: false
        in: query
        description: collaboration_type
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: priority
        required: false
        in: query
        description: priority
        schema:
          type: string
          enum:
          - 1
          - 0
          - -1
      - name: zip_state
        required: false
        in: query
        description: zip_state
        schema:
          type: string
          enum:
          - 0
          - 1
          - 2
      - name: images
        required: false
        in: query
        description: images
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - images
  /api/v1/images/set_tags/:
    get:
      operationId: listSetTags
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SetTag'
          description: ''
      tags:
      - images
    post:
      operationId: createSetTag
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetTag'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetTag'
          description: ''
      tags:
      - images
  /api/v1/images/set_tags/{id}/:
    get:
      operationId: retrieveSetTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetTag'
          description: ''
      tags:
      - images
    put:
      operationId: updateSetTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetTag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetTag'
          description: ''
      tags:
      - images
    patch:
      operationId: partialUpdateSetTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetTag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetTag'
          description: ''
      tags:
      - images
    delete:
      operationId: destroySetTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - images
  /api/v1/images/set_versions/:
    get:
      operationId: listSetVersions
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SetVersion'
          description: ''
      tags:
      - images
    post:
      operationId: createSetVersion
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetVersion'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetVersion'
          description: ''
      tags:
      - images
  /api/v1/images/set_versions/{id}/:
    get:
      operationId: retrieveSetVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetVersion'
          description: ''
      tags:
      - images
    put:
      operationId: updateSetVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetVersion'
          description: ''
      tags:
      - images
    patch:
      operationId: partialUpdateSetVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetVersion'
          description: ''
      tags:
      - images
    delete:
      operationId: destroySetVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - images
  /api/v1/images/screening_modes/:
    get:
      operationId: listScreeningModes
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScreeningMode'
          description: ''
      tags:
      - images
    post:
      operationId: createScreeningMode
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreeningMode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScreeningMode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScreeningMode'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningMode'
          description: ''
      tags:
      - images
  /api/v1/images/screening_modes/{id}/:
    get:
      operationId: retrieveScreeningMode
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningMode'
          description: ''
      tags:
      - images
    put:
      operationId: updateScreeningMode
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreeningMode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScreeningMode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScreeningMode'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningMode'
          description: ''
      tags:
      - images
    patch:
      operationId: partialUpdateScreeningMode
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreeningMode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScreeningMode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScreeningMode'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningMode'
          description: ''
      tags:
      - images
    delete:
      operationId: destroyScreeningMode
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - images
  /api/v1/images/registration/:
    get:
      operationId: listImageRegistrations
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: target_image
        required: false
        in: query
        description: target_image
        schema:
          type: string
      - name: target_image__in
        required: false
        in: query
        description: target_image__in
        schema:
          type: string
      - name: source_image
        required: false
        in: query
        description: source_image
        schema:
          type: string
      - name: source_image__in
        required: false
        in: query
        description: source_image__in
        schema:
          type: string
      - name: registration_error__range
        required: false
        in: query
        description: registration_error__range
        schema:
          type: string
      - name: runtime__range
        required: false
        in: query
        description: runtime__range
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ImageRegistration'
          description: ''
      tags:
      - images
    post:
      operationId: createImageRegistration
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageRegistration'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRegistration'
          description: ''
      tags:
      - images
  /api/v1/images/registration/{id}/:
    get:
      operationId: retrieveImageRegistration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: target_image
        required: false
        in: query
        description: target_image
        schema:
          type: string
      - name: target_image__in
        required: false
        in: query
        description: target_image__in
        schema:
          type: string
      - name: source_image
        required: false
        in: query
        description: source_image
        schema:
          type: string
      - name: source_image__in
        required: false
        in: query
        description: source_image__in
        schema:
          type: string
      - name: registration_error__range
        required: false
        in: query
        description: registration_error__range
        schema:
          type: string
      - name: runtime__range
        required: false
        in: query
        description: runtime__range
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRegistration'
          description: ''
      tags:
      - images
    put:
      operationId: updateImageRegistration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: target_image
        required: false
        in: query
        description: target_image
        schema:
          type: string
      - name: target_image__in
        required: false
        in: query
        description: target_image__in
        schema:
          type: string
      - name: source_image
        required: false
        in: query
        description: source_image
        schema:
          type: string
      - name: source_image__in
        required: false
        in: query
        description: source_image__in
        schema:
          type: string
      - name: registration_error__range
        required: false
        in: query
        description: registration_error__range
        schema:
          type: string
      - name: runtime__range
        required: false
        in: query
        description: runtime__range
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageRegistration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRegistration'
          description: ''
      tags:
      - images
    patch:
      operationId: partialUpdateImageRegistration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: target_image
        required: false
        in: query
        description: target_image
        schema:
          type: string
      - name: target_image__in
        required: false
        in: query
        description: target_image__in
        schema:
          type: string
      - name: source_image
        required: false
        in: query
        description: source_image
        schema:
          type: string
      - name: source_image__in
        required: false
        in: query
        description: source_image__in
        schema:
          type: string
      - name: registration_error__range
        required: false
        in: query
        description: registration_error__range
        schema:
          type: string
      - name: runtime__range
        required: false
        in: query
        description: runtime__range
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageRegistration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRegistration'
          description: ''
      tags:
      - images
    delete:
      operationId: destroyImageRegistration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: target_image
        required: false
        in: query
        description: target_image
        schema:
          type: string
      - name: target_image__in
        required: false
        in: query
        description: target_image__in
        schema:
          type: string
      - name: source_image
        required: false
        in: query
        description: source_image
        schema:
          type: string
      - name: source_image__in
        required: false
        in: query
        description: source_image__in
        schema:
          type: string
      - name: registration_error__range
        required: false
        in: query
        description: registration_error__range
        schema:
          type: string
      - name: runtime__range
        required: false
        in: query
        description: runtime__range
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - images
  /api/v1/images/registration/{id}/convert_coodinates/:
    get:
      operationId: convertCoodinatesImageRegistration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRegistration'
          description: ''
      tags:
      - images
  /api/v1/images/registration/{id}/create_inverse_registration/:
    get:
      operationId: createInverseRegistrationImageRegistration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRegistration'
          description: ''
      tags:
      - images
  /api/v1/annotations/annotations/:
    get:
      operationId: listAnnotations
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: last_edit_time
        required: false
        in: query
        description: last_edit_time
        schema:
          type: string
      - name: last_edit_time__lte
        required: false
        in: query
        description: last_edit_time__lte
        schema:
          type: string
      - name: last_edit_time__gte
        required: false
        in: query
        description: last_edit_time__gte
        schema:
          type: string
      - name: last_edit_time__range
        required: false
        in: query
        description: last_edit_time__range
        schema:
          type: string
      - name: unique_identifier
        required: false
        in: query
        description: unique_identifier
        schema:
          type: string
      - name: unique_identifier__contains
        required: false
        in: query
        description: unique_identifier__contains
        schema:
          type: string
      - name: unique_identifier__in
        required: false
        in: query
        description: unique_identifier__in
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: image__in
        required: false
        in: query
        description: image__in
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: annotation_type__in
        required: false
        in: query
        description: annotation_type__in
        schema:
          type: string
      - name: verified_by
        required: false
        in: query
        description: verified_by
        schema:
          type: string
      - name: verified_by__range
        required: false
        in: query
        description: verified_by__range
        schema:
          type: string
      - name: annotationversion
        required: false
        in: query
        description: annotationversion
        schema:
          type: string
      - name: vector_x
        required: false
        in: query
        description: Vector-X-Range
        schema:
          type: string
      - name: vector_y
        required: false
        in: query
        description: Vector-Y-Range
        schema:
          type: string
      - name: meta_data__isnull
        required: false
        in: query
        description: meta_data__isnull
        schema:
          type: string
      - name: vector__isnull
        required: false
        in: query
        description: vector__isnull
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - annotations
    post:
      operationId: createAnnotation
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - annotations
  /api/v1/annotations/annotations/{id}/:
    get:
      operationId: retrieveAnnotation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: last_edit_time
        required: false
        in: query
        description: last_edit_time
        schema:
          type: string
      - name: last_edit_time__lte
        required: false
        in: query
        description: last_edit_time__lte
        schema:
          type: string
      - name: last_edit_time__gte
        required: false
        in: query
        description: last_edit_time__gte
        schema:
          type: string
      - name: last_edit_time__range
        required: false
        in: query
        description: last_edit_time__range
        schema:
          type: string
      - name: unique_identifier
        required: false
        in: query
        description: unique_identifier
        schema:
          type: string
      - name: unique_identifier__contains
        required: false
        in: query
        description: unique_identifier__contains
        schema:
          type: string
      - name: unique_identifier__in
        required: false
        in: query
        description: unique_identifier__in
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: image__in
        required: false
        in: query
        description: image__in
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: annotation_type__in
        required: false
        in: query
        description: annotation_type__in
        schema:
          type: string
      - name: verified_by
        required: false
        in: query
        description: verified_by
        schema:
          type: string
      - name: verified_by__range
        required: false
        in: query
        description: verified_by__range
        schema:
          type: string
      - name: annotationversion
        required: false
        in: query
        description: annotationversion
        schema:
          type: string
      - name: vector_x
        required: false
        in: query
        description: Vector-X-Range
        schema:
          type: string
      - name: vector_y
        required: false
        in: query
        description: Vector-Y-Range
        schema:
          type: string
      - name: meta_data__isnull
        required: false
        in: query
        description: meta_data__isnull
        schema:
          type: string
      - name: vector__isnull
        required: false
        in: query
        description: vector__isnull
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - annotations
    put:
      operationId: updateAnnotation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: last_edit_time
        required: false
        in: query
        description: last_edit_time
        schema:
          type: string
      - name: last_edit_time__lte
        required: false
        in: query
        description: last_edit_time__lte
        schema:
          type: string
      - name: last_edit_time__gte
        required: false
        in: query
        description: last_edit_time__gte
        schema:
          type: string
      - name: last_edit_time__range
        required: false
        in: query
        description: last_edit_time__range
        schema:
          type: string
      - name: unique_identifier
        required: false
        in: query
        description: unique_identifier
        schema:
          type: string
      - name: unique_identifier__contains
        required: false
        in: query
        description: unique_identifier__contains
        schema:
          type: string
      - name: unique_identifier__in
        required: false
        in: query
        description: unique_identifier__in
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: image__in
        required: false
        in: query
        description: image__in
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: annotation_type__in
        required: false
        in: query
        description: annotation_type__in
        schema:
          type: string
      - name: verified_by
        required: false
        in: query
        description: verified_by
        schema:
          type: string
      - name: verified_by__range
        required: false
        in: query
        description: verified_by__range
        schema:
          type: string
      - name: annotationversion
        required: false
        in: query
        description: annotationversion
        schema:
          type: string
      - name: vector_x
        required: false
        in: query
        description: Vector-X-Range
        schema:
          type: string
      - name: vector_y
        required: false
        in: query
        description: Vector-Y-Range
        schema:
          type: string
      - name: meta_data__isnull
        required: false
        in: query
        description: meta_data__isnull
        schema:
          type: string
      - name: vector__isnull
        required: false
        in: query
        description: vector__isnull
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - annotations
    patch:
      operationId: partialUpdateAnnotation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: last_edit_time
        required: false
        in: query
        description: last_edit_time
        schema:
          type: string
      - name: last_edit_time__lte
        required: false
        in: query
        description: last_edit_time__lte
        schema:
          type: string
      - name: last_edit_time__gte
        required: false
        in: query
        description: last_edit_time__gte
        schema:
          type: string
      - name: last_edit_time__range
        required: false
        in: query
        description: last_edit_time__range
        schema:
          type: string
      - name: unique_identifier
        required: false
        in: query
        description: unique_identifier
        schema:
          type: string
      - name: unique_identifier__contains
        required: false
        in: query
        description: unique_identifier__contains
        schema:
          type: string
      - name: unique_identifier__in
        required: false
        in: query
        description: unique_identifier__in
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: image__in
        required: false
        in: query
        description: image__in
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: annotation_type__in
        required: false
        in: query
        description: annotation_type__in
        schema:
          type: string
      - name: verified_by
        required: false
        in: query
        description: verified_by
        schema:
          type: string
      - name: verified_by__range
        required: false
        in: query
        description: verified_by__range
        schema:
          type: string
      - name: annotationversion
        required: false
        in: query
        description: annotationversion
        schema:
          type: string
      - name: vector_x
        required: false
        in: query
        description: Vector-X-Range
        schema:
          type: string
      - name: vector_y
        required: false
        in: query
        description: Vector-Y-Range
        schema:
          type: string
      - name: meta_data__isnull
        required: false
        in: query
        description: meta_data__isnull
        schema:
          type: string
      - name: vector__isnull
        required: false
        in: query
        description: vector__isnull
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - annotations
    delete:
      operationId: destroyAnnotation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: last_edit_time
        required: false
        in: query
        description: last_edit_time
        schema:
          type: string
      - name: last_edit_time__lte
        required: false
        in: query
        description: last_edit_time__lte
        schema:
          type: string
      - name: last_edit_time__gte
        required: false
        in: query
        description: last_edit_time__gte
        schema:
          type: string
      - name: last_edit_time__range
        required: false
        in: query
        description: last_edit_time__range
        schema:
          type: string
      - name: unique_identifier
        required: false
        in: query
        description: unique_identifier
        schema:
          type: string
      - name: unique_identifier__contains
        required: false
        in: query
        description: unique_identifier__contains
        schema:
          type: string
      - name: unique_identifier__in
        required: false
        in: query
        description: unique_identifier__in
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: image__in
        required: false
        in: query
        description: image__in
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: annotation_type__in
        required: false
        in: query
        description: annotation_type__in
        schema:
          type: string
      - name: verified_by
        required: false
        in: query
        description: verified_by
        schema:
          type: string
      - name: verified_by__range
        required: false
        in: query
        description: verified_by__range
        schema:
          type: string
      - name: annotationversion
        required: false
        in: query
        description: annotationversion
        schema:
          type: string
      - name: vector_x
        required: false
        in: query
        description: Vector-X-Range
        schema:
          type: string
      - name: vector_y
        required: false
        in: query
        description: Vector-Y-Range
        schema:
          type: string
      - name: meta_data__isnull
        required: false
        in: query
        description: meta_data__isnull
        schema:
          type: string
      - name: vector__isnull
        required: false
        in: query
        description: vector__isnull
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - annotations
  /api/v1/annotations/annotation_versions/:
    get:
      operationId: listAnnotationVersions
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: version
        required: false
        in: query
        description: version
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: has_changes
        required: false
        in: query
        description: Has Changes
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnnotationVersion'
          description: ''
      tags:
      - annotations
    post:
      operationId: createAnnotationVersion
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationVersion'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationVersion'
          description: ''
      tags:
      - annotations
  /api/v1/annotations/annotation_versions/{id}/:
    get:
      operationId: retrieveAnnotationVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: version
        required: false
        in: query
        description: version
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: has_changes
        required: false
        in: query
        description: Has Changes
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationVersion'
          description: ''
      tags:
      - annotations
    put:
      operationId: updateAnnotationVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: version
        required: false
        in: query
        description: version
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: has_changes
        required: false
        in: query
        description: Has Changes
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationVersion'
          description: ''
      tags:
      - annotations
    patch:
      operationId: partialUpdateAnnotationVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: version
        required: false
        in: query
        description: version
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: has_changes
        required: false
        in: query
        description: Has Changes
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationVersion'
          description: ''
      tags:
      - annotations
    delete:
      operationId: destroyAnnotationVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: version
        required: false
        in: query
        description: version
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: deleted
        required: false
        in: query
        description: deleted
        schema:
          type: string
      - name: annotation_type
        required: false
        in: query
        description: annotation_type
        schema:
          type: string
      - name: has_changes
        required: false
        in: query
        description: Has Changes
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - annotations
  /api/v1/annotations/annotation_types/:
    get:
      operationId: listAnnotationTypes
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      - name: vector_type__lte
        required: false
        in: query
        description: vector_type__lte
        schema:
          type: string
      - name: vector_type__gte
        required: false
        in: query
        description: vector_type__gte
        schema:
          type: string
      - name: vector_type__range
        required: false
        in: query
        description: vector_type__range
        schema:
          type: string
      - name: vector_type__in
        required: false
        in: query
        description: vector_type__in
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnnotationType'
          description: ''
      tags:
      - annotations
    post:
      operationId: createAnnotationType
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationType'
          description: ''
      tags:
      - annotations
  /api/v1/annotations/annotation_types/{id}/:
    get:
      operationId: retrieveAnnotationType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      - name: vector_type__lte
        required: false
        in: query
        description: vector_type__lte
        schema:
          type: string
      - name: vector_type__gte
        required: false
        in: query
        description: vector_type__gte
        schema:
          type: string
      - name: vector_type__range
        required: false
        in: query
        description: vector_type__range
        schema:
          type: string
      - name: vector_type__in
        required: false
        in: query
        description: vector_type__in
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationType'
          description: ''
      tags:
      - annotations
    put:
      operationId: updateAnnotationType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      - name: vector_type__lte
        required: false
        in: query
        description: vector_type__lte
        schema:
          type: string
      - name: vector_type__gte
        required: false
        in: query
        description: vector_type__gte
        schema:
          type: string
      - name: vector_type__range
        required: false
        in: query
        description: vector_type__range
        schema:
          type: string
      - name: vector_type__in
        required: false
        in: query
        description: vector_type__in
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationType'
          description: ''
      tags:
      - annotations
    patch:
      operationId: partialUpdateAnnotationType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      - name: vector_type__lte
        required: false
        in: query
        description: vector_type__lte
        schema:
          type: string
      - name: vector_type__gte
        required: false
        in: query
        description: vector_type__gte
        schema:
          type: string
      - name: vector_type__range
        required: false
        in: query
        description: vector_type__range
        schema:
          type: string
      - name: vector_type__in
        required: false
        in: query
        description: vector_type__in
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationType'
          description: ''
      tags:
      - annotations
    delete:
      operationId: destroyAnnotationType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: id__in
        required: false
        in: query
        description: id__in
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: vector_type
        required: false
        in: query
        description: vector_type
        schema:
          type: string
      - name: vector_type__lte
        required: false
        in: query
        description: vector_type__lte
        schema:
          type: string
      - name: vector_type__gte
        required: false
        in: query
        description: vector_type__gte
        schema:
          type: string
      - name: vector_type__range
        required: false
        in: query
        description: vector_type__range
        schema:
          type: string
      - name: vector_type__in
        required: false
        in: query
        description: vector_type__in
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      - name: product
        required: false
        in: query
        description: product
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - annotations
  /api/v1/annotations/annotation_media_files/:
    get:
      operationId: listAnnotationMediaFiles
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: media_file_type
        required: false
        in: query
        description: media_file_type
        schema:
          type: string
          enum:
          - 1
          - 2
          - 3
          - 4
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnnotationMediaFile'
          description: ''
      tags:
      - annotations
    post:
      operationId: createAnnotationMediaFile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationMediaFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationMediaFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationMediaFile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationMediaFile'
          description: ''
      tags:
      - annotations
  /api/v1/annotations/annotation_media_files/{id}/:
    get:
      operationId: retrieveAnnotationMediaFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: media_file_type
        required: false
        in: query
        description: media_file_type
        schema:
          type: string
          enum:
          - 1
          - 2
          - 3
          - 4
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationMediaFile'
          description: ''
      tags:
      - annotations
    put:
      operationId: updateAnnotationMediaFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: media_file_type
        required: false
        in: query
        description: media_file_type
        schema:
          type: string
          enum:
          - 1
          - 2
          - 3
          - 4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationMediaFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationMediaFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationMediaFile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationMediaFile'
          description: ''
      tags:
      - annotations
    patch:
      operationId: partialUpdateAnnotationMediaFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: media_file_type
        required: false
        in: query
        description: media_file_type
        schema:
          type: string
          enum:
          - 1
          - 2
          - 3
          - 4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationMediaFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationMediaFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationMediaFile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationMediaFile'
          description: ''
      tags:
      - annotations
    delete:
      operationId: destroyAnnotationMediaFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: media_file_type
        required: false
        in: query
        description: media_file_type
        schema:
          type: string
          enum:
          - 1
          - 2
          - 3
          - 4
      responses:
        '204':
          description: ''
      tags:
      - annotations
  /api/v1/annotations/verifications/:
    get:
      operationId: listVerifications
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Verification'
          description: ''
      tags:
      - annotations
    post:
      operationId: createVerification
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Verification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Verification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
          description: ''
      tags:
      - annotations
  /api/v1/annotations/verifications/{id}/:
    get:
      operationId: retrieveVerification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
          description: ''
      tags:
      - annotations
    put:
      operationId: updateVerification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Verification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Verification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
          description: ''
      tags:
      - annotations
    patch:
      operationId: partialUpdateVerification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Verification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Verification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
          description: ''
      tags:
      - annotations
    delete:
      operationId: destroyVerification
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: annotation
        required: false
        in: query
        description: annotation
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: verified
        required: false
        in: query
        description: verified
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - annotations
  /api/v1/annotations/log_image_actions/:
    get:
      operationId: listLogImageActions
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: ip
        required: false
        in: query
        description: ip
        schema:
          type: string
      - name: ip__contains
        required: false
        in: query
        description: ip__contains
        schema:
          type: string
      - name: action
        required: false
        in: query
        description: action
        schema:
          type: string
          enum:
          - 1
          - 2
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LogImageAction'
          description: ''
      tags:
      - annotations
    post:
      operationId: createLogImageAction
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogImageAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogImageAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogImageAction'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogImageAction'
          description: ''
      tags:
      - annotations
  /api/v1/annotations/log_image_actions/{id}/:
    get:
      operationId: retrieveLogImageAction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: ip
        required: false
        in: query
        description: ip
        schema:
          type: string
      - name: ip__contains
        required: false
        in: query
        description: ip__contains
        schema:
          type: string
      - name: action
        required: false
        in: query
        description: action
        schema:
          type: string
          enum:
          - 1
          - 2
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogImageAction'
          description: ''
      tags:
      - annotations
    put:
      operationId: updateLogImageAction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: ip
        required: false
        in: query
        description: ip
        schema:
          type: string
      - name: ip__contains
        required: false
        in: query
        description: ip__contains
        schema:
          type: string
      - name: action
        required: false
        in: query
        description: action
        schema:
          type: string
          enum:
          - 1
          - 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogImageAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogImageAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogImageAction'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogImageAction'
          description: ''
      tags:
      - annotations
    patch:
      operationId: partialUpdateLogImageAction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: ip
        required: false
        in: query
        description: ip
        schema:
          type: string
      - name: ip__contains
        required: false
        in: query
        description: ip__contains
        schema:
          type: string
      - name: action
        required: false
        in: query
        description: action
        schema:
          type: string
          enum:
          - 1
          - 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogImageAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogImageAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogImageAction'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogImageAction'
          description: ''
      tags:
      - annotations
    delete:
      operationId: destroyLogImageAction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: image
        required: false
        in: query
        description: image
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: time
        required: false
        in: query
        description: time
        schema:
          type: string
      - name: time__lte
        required: false
        in: query
        description: time__lte
        schema:
          type: string
      - name: time__gte
        required: false
        in: query
        description: time__gte
        schema:
          type: string
      - name: time__range
        required: false
        in: query
        description: time__range
        schema:
          type: string
      - name: ip
        required: false
        in: query
        description: ip
        schema:
          type: string
      - name: ip__contains
        required: false
        in: query
        description: ip__contains
        schema:
          type: string
      - name: action
        required: false
        in: query
        description: action
        schema:
          type: string
          enum:
          - 1
          - 2
      responses:
        '204':
          description: ''
      tags:
      - annotations
  /api/v1/administration/products/:
    get:
      operationId: listProducts
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      - name: annotationtype
        required: false
        in: query
        description: annotationtype
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - administration
    post:
      operationId: createProduct
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - administration
  /api/v1/administration/products/{id}/:
    get:
      operationId: retrieveProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      - name: annotationtype
        required: false
        in: query
        description: annotationtype
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - administration
    put:
      operationId: updateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      - name: annotationtype
        required: false
        in: query
        description: annotationtype
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - administration
    patch:
      operationId: partialUpdateProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      - name: annotationtype
        required: false
        in: query
        description: annotationtype
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - administration
    delete:
      operationId: destroyProduct
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: name__contains
        required: false
        in: query
        description: name__contains
        schema:
          type: string
      - name: description
        required: false
        in: query
        description: description
        schema:
          type: string
      - name: description__contains
        required: false
        in: query
        description: description__contains
        schema:
          type: string
      - name: team
        required: false
        in: query
        description: team
        schema:
          type: string
      - name: creator
        required: false
        in: query
        description: creator
        schema:
          type: string
      - name: imagesets
        required: false
        in: query
        description: imagesets
        schema:
          type: string
      - name: annotationtype
        required: false
        in: query
        description: annotationtype
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - administration
  /api/v1/images/images/{id}/register_images/:
    post:
      operationId: registerImagesImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
  /api/v1/images/set_versions/{id}/add/:
    post:
      operationId: addSetVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetVersion'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetVersion'
          description: ''
      tags:
      - images
  /api/v1/images/images/{id}/update_image_cache/:
    patch:
      operationId: updateImageCacheImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
      tags:
      - images
  /api/v1/annotations/annotations/multiple_delete/:
    delete:
      operationId: multipleDeleteAnnotation
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - annotations
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        last_login:
          type: string
          format: date-time
          nullable: true
        team_set:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - username
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
          minLength: 3
        members:
          type: array
          items:
            type: string
          readOnly: true
        image_sets:
          type: array
          items:
            type: integer
        product_set:
          type: array
          items:
            type: integer
      required:
      - name
      - image_sets
      - product_set
    TeamMembership:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_admin:
          type: boolean
        team:
          type: integer
        user:
          type: integer
      required:
      - team
      - user
    Image:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 256
        filename:
          type: string
          maxLength: 256
        time:
          type: string
          format: date-time
          readOnly: true
        height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        depth:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        frames:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        channels:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        mpp:
          type: number
        objectivePower:
          type: number
        image_type:
          enum:
          - 0
          - 1
          - 2
          type: integer
          minimum: -2147483648
          maximum: 2147483647
        image_set:
          type: integer
        annotations:
          type: array
          items:
            type: integer
      required:
      - name
      - filename
      - image_set
      - annotations
    ImageSet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 256
        path:
          type: string
          nullable: true
          maxLength: 256
        location:
          type: string
          nullable: true
          maxLength: 256
        description:
          type: string
          nullable: true
          maxLength: 1000
        images:
          type: array
          items:
            type: integer
        product_set:
          type: array
          items:
            type: integer
        main_annotation_type:
          type: integer
          nullable: true
        set_tags:
          type: array
          items:
            type: integer
        team:
          type: integer
          nullable: true
        creator:
          type: integer
          nullable: true
        collaboration_type:
          enum:
          - 0
          - 1
          - 2
          type: integer
          minimum: -2147483648
          maximum: 2147483647
      required:
      - name
      - images
      - product_set
      - set_tags
      - team
    SetTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        imagesets:
          type: array
          items:
            type: integer
      required:
      - name
      - imagesets
    SetVersion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        imagesets:
          type: array
          items:
            type: integer
        time:
          type: string
          format: date-time
        annotationversion_set:
          type: array
          items:
            type: integer
        file:
          type: string
          format: binary
          nullable: true
      required:
      - name
      - imagesets
      - annotationversion_set
    ScreeningMode:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: integer
        user:
          type: integer
          nullable: true
        screening_tiles:
          type: object
          nullable: true
        x_steps:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        y_steps:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        x_resolution:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        y_resolution:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        current_index:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - image
      - user
    ImageRegistration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        source_image:
          type: integer
        target_image:
          type: integer
        transformation_matrix:
          type: object
          nullable: true
        registration_error:
          type: number
        runtime:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        file:
          type: string
          format: binary
          nullable: true
      required:
      - source_image
      - target_image
    Annotation:
      type: object
      properties:
        annotation_type:
          type: integer
        id:
          type: integer
          readOnly: true
        vector:
          type: object
          nullable: true
        verified_by_user:
          type: string
          readOnly: true
        image:
          type: integer
        concealed:
          type: string
          readOnly: true
        blurred:
          type: string
          readOnly: true
        last_editor:
          type: integer
          nullable: true
        last_edit_time:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
        time:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
        description:
          type: string
          maxLength: 1000
        unique_identifier:
          type: string
          format: uuid
        uploaded_media_files:
          type: array
          items:
            type: integer
        meta_data:
          type: object
          nullable: true
        annotationversion_set:
          type: array
          items:
            type: integer
      required:
      - annotation_type
      - image
      - uploaded_media_files
      - annotationversion_set
    AnnotationVersion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        version:
          type: integer
        annotation:
          type: integer
        image:
          type: integer
        annotation_type:
          type: integer
        deleted:
          type: boolean
        vector:
          type: object
          nullable: true
        has_changes:
          type: boolean
      required:
      - version
      - annotation
      - image
      - annotation_type
      - has_changes
    AnnotationType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        vector_type:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        node_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        enable_concealed:
          type: boolean
        enable_blurred:
          type: boolean
        color_code:
          type: string
          maxLength: 7
        default_width:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        default_height:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        closed:
          type: boolean
        area_hit_test:
          type: boolean
        product:
          type: integer
          nullable: true
      required:
      - name
      - product
    AnnotationMediaFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        media_file_type:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        file:
          type: string
          format: binary
          nullable: true
        annotation:
          type: integer
      required:
      - name
      - annotation
    Verification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        annotation:
          type: integer
        user:
          type: integer
          nullable: true
        time:
          type: string
          format: date-time
          readOnly: true
        verified:
          type: boolean
      required:
      - annotation
      - user
    LogImageAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: integer
          nullable: true
        user:
          type: integer
          nullable: true
        time:
          type: string
          format: date-time
          readOnly: true
        action:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        ip:
          type: string
          nullable: true
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 1000
        team:
          type: integer
          nullable: true
        creator:
          type: integer
          nullable: true
        imagesets:
          type: array
          items:
            type: integer
        annotationtype_set:
          type: array
          items:
            type: integer
      required:
      - name
      - team
      - imagesets
      - annotationtype_set